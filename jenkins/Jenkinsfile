pipeline {
    agent none

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:2-alpine'
                }
            }
            steps {
                echo 'üîß Compiling Python files...'
                sh 'ls -R'
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'qnib/pytest'
                }
            }
            steps {
                echo 'üß™ Running tests...'
                sh 'ls -R'
                sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }

        stage('Deliver') {
            agent {
                docker {
                    image 'cdrx/pyinstaller-linux:python2'
                }
            }
            steps {
                echo 'üì¶ Creating executable with PyInstaller...'
                sh 'ls -R'
                sh 'pyinstaller --onefile --log-level=DEBUG sources/add2vals.py'
                sh 'ls -l dist' // Verifikasi file hasil build
            }
            post {
                success {
                    archiveArtifacts artifacts: 'dist/add2vals', onlyIfSuccessful: true
                }
                failure {
                    echo '‚ùå Deliver stage failed. Check PyInstaller logs for details.'
                }
            }
        }
    }
}
